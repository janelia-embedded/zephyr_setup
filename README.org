#+TITLE: zephyr_setup
#+AUTHOR: Peter Polidoro
#+EMAIL: peter@polidoro.io

* Repository Information
- Author :: Peter Polidoro
- License :: BSD

* PlatformIO

** Setup platformio-udev.rules

#+BEGIN_SRC sh

curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/master/scripts/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules
sudo service udev restart
sudo usermod -a -G dialout $USER
sudo usermod -a -G plugdev $USER
sudo reboot

#+END_SRC

** Download examples

#+BEGIN_SRC sh

mkdir -p ~/tmp && cd "$_"
git clone https://github.com/janelia-embedded/zephyr_setup

#+END_SRC

** Teensy 4.0

*** Install platform-teensy

#+BEGIN_SRC sh

guix shell platformio
pio pkg install -g --platform "platformio/teensy@^4.16.0"

#+END_SRC

*** platformio-blink

**** Build example and upload

#+BEGIN_SRC sh

guix shell platformio
cd ~/tmp/zephyr_setup/examples/teensy/platformio-blink
pio run -e teensy40 --target upload

#+END_SRC

*** platformio-synchronization

**** Build example and upload

#+BEGIN_SRC sh

guix shell platformio
cd ~/tmp/zephyr_setup/examples/teensy/platformio-synchronization
pio run -e teensy40 --target upload

#+END_SRC

**** Test example

***** Connect TTL to USB serial converter

| Cable  | Teensy40 | Description |
|--------+----------+-------------|
| black  |      GND | GND         |
| orange |        0 | TXD         |
| yellow |        1 | RXD         |

***** Run device monitor

#+BEGIN_SRC sh

guix shell platformio
pio device monitor -p /dev/ttyUSB0 -b 115200

#+END_SRC

** NXP FRDM-K64F

*** Install platform-freescalekinetis

#+BEGIN_SRC sh

guix shell platformio
pio pkg install -g --platform "platformio/freescalekinetis@^9.2.0"

#+END_SRC

*** platformio-blink

**** Build example and upload

#+BEGIN_SRC sh

guix shell platformio
cd ~/tmp/zephyr_setup/examples/freescalekinetis/platformio-blink
pio run -e frdm_k64f --target upload

#+END_SRC

*** platformio-net-telnet

**** Build example and upload

#+BEGIN_SRC sh

guix shell platformio
cd ~/tmp/zephyr_setup/examples/freescalekinetis/platformio-net-telnet
pio run -e frdm_k64f --target upload

#+END_SRC

**** Test example

***** Scan for telnet ports

#+BEGIN_SRC sh

ip addr
# note ip address, e.g. 10.101.30.57
guix shell nmap
nmap -p 23 10.101.30.0/24 --open

#+END_SRC

***** Open telnet port

#+BEGIN_SRC sh

guix shell inetutils
telnet 10.101.30.xx

#+END_SRC

*** zephyr-microros-int32-publisher

**** Build example and upload

#+BEGIN_SRC sh

guix shell platformio
cd ~/tmp/zephyr_setup/examples/freescalekinetis/platformio-net-telnet
pio run -e frdm_k64f --target upload

#+END_SRC

**** Test example

***** Scan for telnet ports

#+BEGIN_SRC sh

ip addr
# note ip address, e.g. 10.101.30.57
guix shell nmap
nmap -p 23 10.101.30.0/24 --open

#+END_SRC

***** Open telnet port

#+BEGIN_SRC sh

guix shell inetutils
telnet 10.101.30.xx

#+END_SRC

* Docker and West

** Docker on host machine

*** Debian-based

#+BEGIN_SRC sh

sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get update
sudo apt-get install \
     ca-certificates \
     curl \
     gnupg \
     lsb-release -y
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
sudo groupadd docker
sudo usermod -aG docker $USER

#+END_SRC

** Pull Docker Image

#+BEGIN_SRC sh

docker pull zephyrprojectrtos/zephyr-build:latest

#+END_SRC

** Install west

*** venv

#+BEGIN_SRC sh

python3 -m venv ~/zephyrproject/.venv
source ~/zephyrproject/.venv/bin/activate
pip install west

#+END_SRC

** Get Zephyr

#+BEGIN_SRC sh

west init ~/zephyrproject
cd ~/zephyrproject
west update
west zephyr-export

#+END_SRC

** Run Docker Image

#+BEGIN_SRC sh

docker run -it --rm --privileged -p 5900:5900 -v ~/zephyrproject:/workdir -v /dev:/dev zephyrprojectrtos/zephyr-build:latest

#+END_SRC

** Build the Blinky Sample

#+BEGIN_SRC sh

cd zephyr
sudo west build -p auto -b teensy40 samples/basic/blinky
exit

#+END_SRC

** Flash the Blinky Sample

#+BEGIN_SRC sh

guix shell teensy-loader-cli
teensy_loader_cli -v --mcu=TEENSY40 -w ~/zephyrproject/zephyr/build/zephyr/zephyr.hex

#+END_SRC

* Guix

** Install west

*** guix

#+BEGIN_SRC sh

guix time-machine -C .channels.scm -- shell --pure -f .guix.scm

#+END_SRC

** Get Zephyr

#+BEGIN_SRC sh

west init ~/zephyrproject
cd ~/zephyrproject
west update
west zephyr-export

#+END_SRC

** Build the Blinky Sample

#+BEGIN_SRC sh

west build -p auto -b frdm_k64f zephyr/samples/basic/blinky

#+END_SRC

** Flash the Blinky Sample

#+BEGIN_SRC sh

guix shell teensy-loader-cli
teensy_loader_cli -v --mcu=TEENSY40 -w ~/zephyrproject/zephyr/build/zephyr/zephyr.hex

#+END_SRC
